apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlflow.fullname" . }}
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
spec:  
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mlflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mlflow.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:      
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["server"]
          ports:
            - name: mlflow-server
              containerPort: 5000
              protocol: TCP          
          env:
          # backend store settings
          - name: POSTGRES_HOST
            value: {{ .Values.backend.postgres.host }}
          - name: POSTGRES_PORT
            value: {{ .Values.backend.postgres.port | quote }}
          - name: POSTGRES_DB
            value: {{ .Values.backend.postgres.db }}
          - name: MLFLOW_BACKEND_STORE_URI
            value: postgresql+psycopg2://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)

          # storage setting s3
          {{- if .Values.storage.s3.endpointUrl }}
          - name: MLFLOW_S3_ENDPOINT_URL
            value: {{ .Values.storage.s3.endpointUrl }}
          {{- end }}
          - name: MLFLOW_S3_IGNORE_TLS
            value: {{ .Values.storage.s3.ignoreTls | quote }}
          {{- if .Values.storage.s3.defaultRegion }}
          - name: AWS_DEFAULT_REGION
            value: {{ .Values.storage.s3.defaultRegion }}
          {{- end }}

          # storage setting azure
          {{- if .Values.storage.azure.uploadDownloadTimeout }}
          - name: MLFLOW_ARTIFACT_UPLOAD_DOWNLOAD_TIMEOUT
            value: {{ .Values.storage.azure.uploadDownloadTimeout | quote }}
          {{- end }}

          # artifacts destination
          {{- if .Values.storage.artifactsDestination }}
          - name: MLFLOW_ARTIFACTS_DESTINATION
            value: {{ .Values.storage.artifactsDestination }}
          {{- end }}
          
          # others
          - name: MLFLOW_EXPORT_PROMETHEUS
            value: {{ .Values.exposePrometheusMetrics | quote }}
          - name: MLFLOW_WORKERS
            value: {{ .Values.workers | quote }}
          
          envFrom:
          # storage and backend secrets
          - secretRef:
              name: {{ .Values.backend.secretName }}
          - secretRef:
              name: {{ .Values.storage.secretName }}
          # adding optional extra env from configmaps
          {{- with .Values.extraEnvFrom }}
          {{- range . }}
          {{- if .configMapRef.name }}
          - configMapRef:
              name: {{ .configMapRef.name }}
          {{- end }}
          {{- end }}
          {{- end }}
          
          livenessProbe:
            httpGet:
              path: /health
              port: mlflow-server
            initialDelaySeconds: 60
            periodSeconds: 60
            failureThreshold: 5

          # readinessProbe:
          #   exec:
          #     command:
          #     - python
          #     - /usr/local/bin/mlflow_check.py
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          #   failureThreshold: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
