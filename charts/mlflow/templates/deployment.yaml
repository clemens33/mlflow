apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mlflow.fullname" . }}
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
spec:  
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "mlflow.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mlflow.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:      
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["server"]
          ports:
            - name: mlflow-server
              containerPort: 5000
              protocol: TCP
          env:
          # backend store settings
          - name: POSTGRES_HOST
            value: {{ .Values.db.POSTGRES_HOST }}
          - name: POSTGRES_PORT
            value: {{ .Values.db.POSTGRES_PORT | quote }}
          - name: POSTGRES_DB
            value: {{ .Values.db.POSTGRES_DB }}
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-secret
                key: POSTGRES_PASSWORD
          - name: MLFLOW_BACKEND_STORE_URI
            value: postgresql+psycopg2://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)

          # artifact store settings (s3 compatible)
          - name: MLFLOW_S3_ENDPOINT_URL
            value: {{ .Values.s3.MLFLOW_S3_ENDPOINT_URL }}
          - name: MLFLOW_S3_IGNORE_TLS
            value: {{ .Values.s3.MLFLOW_S3_IGNORE_TLS | quote }}
          - name: AWS_DEFAULT_REGION
            value: {{ .Values.s3.AWS_DEFAULT_REGION }}
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: s3-secret
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: s3-secret
                key: AWS_SECRET_ACCESS_KEY
          - name: MLFLOW_ARTIFACTS_DESTINATION
            value: {{ .Values.MLFLOW_ARTIFACTS_DESTINATION }}
          
          # others
          - name: MLFLOW_EXPORT_PROMETHEUS
            value: {{ .Values.MLFLOW_EXPORT_PROMETHEUS | quote }}
          - name: MLFLOW_WORKERS
            value: {{ .Values.MLFLOW_WORKERS | quote }}

          livenessProbe:
            httpGet:
              path: /health
              port: mlflow-server
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 5

          # readinessProbe:
          #   exec:
          #     command:
          #     - python
          #     - /usr/local/bin/mlflow_check.py
          #   initialDelaySeconds: 10
          #   periodSeconds: 10
          #   failureThreshold: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
